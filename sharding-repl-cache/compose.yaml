version: '3'
services:

  configSrv:
    image: mongo:latest
    container_name: configSrv
    restart: always
    ports:
      - "27017:27017"
    networks:
      app-network:
        ipv4_address: 173.17.0.10
    volumes:
      - config-data:/data/db
    command:
      [
        "--configsvr",
        "--replSet",
        "config_server",
        "--bind_ip_all",
        "--port",
        "27017"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 20s

  # Первый репликасет (rs0)
  shard1:
    image: mongo:latest
    container_name: shard1
    restart: always
    ports:
      - "27018:27018"
    networks:
      app-network:
        ipv4_address: 173.17.0.9
    volumes:
      - shard1-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "rs0",
        "--bind_ip_all",
        "--port",
        "27018"
      ]

  shard2:
    image: mongo:latest
    container_name: shard2
    restart: always
    ports:
      - "27019:27019"
    networks:
      app-network:
        ipv4_address: 173.17.0.8
    volumes:
      - shard2-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "rs0",
        "--bind_ip_all",
        "--port",
        "27019"
      ]

  shard3:
    image: mongo:latest
    container_name: shard3
    restart: always
    ports:
      - "27021:27021"
    networks:
      app-network:
        ipv4_address: 173.17.0.13
    volumes:
      - shard3-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "rs0",
        "--bind_ip_all",
        "--port",
        "27021"
      ]

  # Второй репликасет (rs1)
  shard4:
    image: mongo:latest
    container_name: shard4
    restart: always
    ports:
      - "27022:27022"
    networks:
      app-network:
        ipv4_address: 173.17.0.14
    volumes:
      - shard4-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "rs1",
        "--bind_ip_all",
        "--port",
        "27022"
      ]

  shard5:
    image: mongo:latest
    container_name: shard5
    restart: always
    ports:
      - "27023:27023"
    networks:
      app-network:
        ipv4_address: 173.17.0.15
    volumes:
      - shard5-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "rs1",
        "--bind_ip_all",
        "--port",
        "27023"
      ]

  shard6:
    image: mongo:latest
    container_name: shard6
    restart: always
    ports:
      - "27024:27024"
    networks:
      app-network:
        ipv4_address: 173.17.0.16
    volumes:
      - shard6-data:/data/db
    command:
      [
        "--shardsvr",
        "--replSet",
        "rs1",
        "--bind_ip_all",
        "--port",
        "27024"
      ]

  mongos_router:
    image: mongo:latest
    container_name: mongos_router
    restart: always
    ports:
      - "27020:27020"
    networks:
      app-network:
        ipv4_address: 173.17.0.7
    command:
      [
        "mongos",
        "--configdb",
        "config_server/configSrv:27017",
        "--bind_ip_all",
        "--port",
        "27020"
      ]
    healthcheck:
      test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      start_period: 20s

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      app-network:
        ipv4_address: 173.17.0.12
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 5s
      timeout: 3s
      retries: 3

  pymongo_api:
    container_name: pymongo_api
    build:
      context: ./api_app
      dockerfile: Dockerfile
    image: kazhem/pymongo_api:1.0.0
    depends_on:
      - mongos_router
      - redis
    ports:
      - 8080:8080
    environment:
      MONGODB_URL: "mongodb://mongos_router:27020"
      MONGODB_DATABASE_NAME: "somedb"
      REDIS_URL: "redis://redis:6379"
    networks:
      app-network:
        ipv4_address: 173.17.0.11
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080" ]
      interval: 5s
      start_period: 20s


networks:
  app-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 173.17.0.0/16

volumes:
  config-data:
  shard1-data:
  shard2-data:
  shard3-data:
  shard4-data:
  shard5-data:
  shard6-data:
